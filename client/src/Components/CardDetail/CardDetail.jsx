import React, { useEffect } from "react";
import { useSelector, useDispatch } from "react-redux";
import { deleteDetail, recipeDetail } from "../../Redux/Action";
import { useParams } from "react-router";

import styles from "./CardDetail.module.css";
import healthScore from "../../Images/healthScore.png";
import clock from "../../Images/clock.png";
import world from "../../Images/worldwide.png";
import dietss from "../../Images/diet.png";
import tilde from "../../Images/tilde.jpg";

export default function CardDetail() {
  const dispatch = useDispatch();
  const { id } = useParams();

  const detail = useSelector((state) => state.details);

  var diet = [];
  if (detail.diets && Array.isArray(detail.diets)) {
    diet = detail.diets.map((el) => el.name);
  }

  useEffect(() => {
    dispatch(recipeDetail(id));

    return () => {
      // SE EJECUTA CUANDO SE DESMONTA EL COMPONENTE
      dispatch(deleteDetail());
    };
  }, [dispatch, id]);

  return (
    <div className={styles.recipe}>
      <div className={styles.recipe__image}>
        {" "}
        <img src={detail.image} alt="not found" />
        <div className={styles.back_to_home}>
          <a href="/home">Back to Home</a>
        </div>
      </div>
      <div className={styles.recipe__navbar}>
        <svg fill="none" width={28} viewBox="0 0 24 24"></svg>
      </div>
      <div className={styles.recipe__details}>
        <div className={styles.main_header}>
          <svg
            className={styles.main_header__divider}
            width={90}
            height={32}
            viewBox="0 0 90 32"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12.512 11.072L11.072 8.448C10.4533 7.33867 10.144 6.44267 10.144 5.76C10.144 5.20533 10.368 4.704 10.816 4.256L11.232 3.84L11.552 3.456C11.9147 3.02933 12.32 2.816 12.768 2.816C13.216 2.816 13.5787 2.98667 13.856 3.328C14.0053 3.49867 14.1653 3.68 14.336 3.872C14.5067 4.04267 14.6773 4.21333 14.848 4.384C15.2107 4.74667 15.392 5.20533 15.392 5.76C15.392 6.03733 15.3493 6.34667 15.264 6.688C15.1787 7.008 15.04 7.34933 14.848 7.712C14.464 8.416 13.856 9.536 13.024 11.072H12.512ZM15.872 11.456L15.296 10.816L20.352 5.376C20.864 4.8 21.3227 4.512 21.728 4.512C21.9627 4.512 22.1227 4.58667 22.208 4.736C22.2933 4.88533 22.336 5.03467 22.336 5.184C22.336 5.33333 22.24 5.54667 22.048 5.824C21.856 6.08 21.6853 6.272 21.536 6.4L15.872 11.456ZM9.664 11.456L4 6.4C3.78667 6.208 3.59467 5.99467 3.424 5.76C3.27467 5.52533 3.2 5.312 3.2 5.12C3.2 4.992 3.25333 4.864 3.36 4.736C3.46667 4.58667 3.616 4.512 3.808 4.512C3.97867 4.512 4.18133 4.58667 4.416 4.736C4.672 4.864 4.93867 5.07733 5.216 5.376L10.24 10.816L9.664 11.456ZM4.576 16.576C4.02133 16.576 3.53067 16.352 3.104 15.904L2.656 15.488L2.272 15.168C1.84533 14.8267 1.632 14.4213 1.632 13.952C1.632 13.504 1.80267 13.1413 2.144 12.864C2.31467 12.7147 2.496 12.5653 2.688 12.416C2.88 12.2453 3.06133 12.064 3.232 11.872C3.57333 11.5093 4.02133 11.328 4.576 11.328C5.13067 11.328 5.67467 11.456 6.208 11.712C6.74133 11.968 7.34933 12.288 8.032 12.672L9.888 13.696V14.208L7.296 15.648C6.18667 16.2667 5.28 16.576 4.576 16.576ZM20.96 16.576C20.6187 16.576 20.2133 16.4907 19.744 16.32C19.296 16.1493 18.8053 15.9253 18.272 15.648L15.648 14.208V13.696C16.7147 13.12 17.7067 12.5867 18.624 12.096C19.5413 11.584 20.32 11.328 20.96 11.328C21.5147 11.328 22.016 11.552 22.464 12L22.88 12.416L23.264 12.736C23.6907 13.0773 23.904 13.4827 23.904 13.952C23.904 14.4 23.7333 14.7627 23.392 15.04C23.2213 15.1893 23.04 15.3493 22.848 15.52C22.6773 15.6907 22.5067 15.8613 22.336 16.032C21.9733 16.3947 21.5147 16.576 20.96 16.576ZM12.768 16.512C12.0853 16.512 11.488 16.256 10.976 15.744C10.464 15.232 10.208 14.6347 10.208 13.952C10.208 13.2693 10.4533 12.672 10.944 12.16C11.456 11.648 12.064 11.392 12.768 11.392C13.4507 11.392 14.048 11.648 14.56 12.16C15.072 12.672 15.328 13.2693 15.328 13.952C15.328 14.6347 15.072 15.232 14.56 15.744C14.048 16.256 13.4507 16.512 12.768 16.512ZM3.808 23.392C3.616 23.392 3.46667 23.328 3.36 23.2C3.25333 23.0507 3.2 22.912 3.2 22.784C3.2 22.6133 3.27467 22.4107 3.424 22.176C3.59467 21.92 3.78667 21.696 4 21.504L9.664 16.448L10.24 17.088L5.216 22.528C4.93867 22.8267 4.672 23.0507 4.416 23.2C4.18133 23.328 3.97867 23.392 3.808 23.392ZM21.792 23.392C21.3227 23.392 20.832 23.104 20.32 22.528L15.296 17.088L15.872 16.448L21.536 21.504C21.7707 21.7173 21.9627 21.9413 22.112 22.176C22.2613 22.3893 22.336 22.592 22.336 22.784C22.336 22.8907 22.2827 23.0187 22.176 23.168C22.0907 23.3173 21.9627 23.392 21.792 23.392ZM12.768 25.088C12.2987 25.088 11.904 24.8853 11.584 24.48L11.2 24C10.752 23.616 10.464 23.2747 10.336 22.976C10.1867 22.7413 10.112 22.5067 10.112 22.272C10.112 21.4827 10.432 20.5333 11.072 19.424L12.512 16.832H13.024L14.048 18.688C14.3253 19.1573 14.5493 19.584 14.72 19.968C14.912 20.3307 15.0507 20.6293 15.136 20.864C15.2427 21.0987 15.3067 21.3227 15.328 21.536C15.3707 21.7493 15.392 21.952 15.392 22.144C15.392 22.4213 15.328 22.6773 15.2 22.912C15.0933 23.1467 14.9333 23.3813 14.72 23.616L13.984 24.448C13.5787 24.8747 13.1733 25.088 12.768 25.088Z"
              fill="#AD9D80"
            />
            <path
              d="M44.512 11.072L43.072 8.448C42.4533 7.33867 42.144 6.44267 42.144 5.76C42.144 5.20533 42.368 4.704 42.816 4.256L43.232 3.84L43.552 3.456C43.9147 3.02933 44.32 2.816 44.768 2.816C45.216 2.816 45.5787 2.98667 45.856 3.328C46.0053 3.49867 46.1653 3.68 46.336 3.872C46.5067 4.04267 46.6773 4.21333 46.848 4.384C47.2107 4.74667 47.392 5.20533 47.392 5.76C47.392 6.03733 47.3493 6.34667 47.264 6.688C47.1787 7.008 47.04 7.34933 46.848 7.712C46.464 8.416 45.856 9.536 45.024 11.072H44.512ZM47.872 11.456L47.296 10.816L52.352 5.376C52.864 4.8 53.3227 4.512 53.728 4.512C53.9627 4.512 54.1227 4.58667 54.208 4.736C54.2933 4.88533 54.336 5.03467 54.336 5.184C54.336 5.33333 54.24 5.54667 54.048 5.824C53.856 6.08 53.6853 6.272 53.536 6.4L47.872 11.456ZM41.664 11.456L36 6.4C35.7867 6.208 35.5947 5.99467 35.424 5.76C35.2747 5.52533 35.2 5.312 35.2 5.12C35.2 4.992 35.2533 4.864 35.36 4.736C35.4667 4.58667 35.616 4.512 35.808 4.512C35.9787 4.512 36.1813 4.58667 36.416 4.736C36.672 4.864 36.9387 5.07733 37.216 5.376L42.24 10.816L41.664 11.456ZM36.576 16.576C36.0213 16.576 35.5307 16.352 35.104 15.904L34.656 15.488L34.272 15.168C33.8453 14.8267 33.632 14.4213 33.632 13.952C33.632 13.504 33.8027 13.1413 34.144 12.864C34.3147 12.7147 34.496 12.5653 34.688 12.416C34.88 12.2453 35.0613 12.064 35.232 11.872C35.5733 11.5093 36.0213 11.328 36.576 11.328C37.1307 11.328 37.6747 11.456 38.208 11.712C38.7413 11.968 39.3493 12.288 40.032 12.672L41.888 13.696V14.208L39.296 15.648C38.1867 16.2667 37.28 16.576 36.576 16.576ZM52.96 16.576C52.6187 16.576 52.2133 16.4907 51.744 16.32C51.296 16.1493 50.8053 15.9253 50.272 15.648L47.648 14.208V13.696C48.7147 13.12 49.7067 12.5867 50.624 12.096C51.5413 11.584 52.32 11.328 52.96 11.328C53.5147 11.328 54.016 11.552 54.464 12L54.88 12.416L55.264 12.736C55.6907 13.0773 55.904 13.4827 55.904 13.952C55.904 14.4 55.7333 14.7627 55.392 15.04C55.2213 15.1893 55.04 15.3493 54.848 15.52C54.6773 15.6907 54.5067 15.8613 54.336 16.032C53.9733 16.3947 53.5147 16.576 52.96 16.576ZM44.768 16.512C44.0853 16.512 43.488 16.256 42.976 15.744C42.464 15.232 42.208 14.6347 42.208 13.952C42.208 13.2693 42.4533 12.672 42.944 12.16C43.456 11.648 44.064 11.392 44.768 11.392C45.4507 11.392 46.048 11.648 46.56 12.16C47.072 12.672 47.328 13.2693 47.328 13.952C47.328 14.6347 47.072 15.232 46.56 15.744C46.048 16.256 45.4507 16.512 44.768 16.512ZM35.808 23.392C35.616 23.392 35.4667 23.328 35.36 23.2C35.2533 23.0507 35.2 22.912 35.2 22.784C35.2 22.6133 35.2747 22.4107 35.424 22.176C35.5947 21.92 35.7867 21.696 36 21.504L41.664 16.448L42.24 17.088L37.216 22.528C36.9387 22.8267 36.672 23.0507 36.416 23.2C36.1813 23.328 35.9787 23.392 35.808 23.392ZM53.792 23.392C53.3227 23.392 52.832 23.104 52.32 22.528L47.296 17.088L47.872 16.448L53.536 21.504C53.7707 21.7173 53.9627 21.9413 54.112 22.176C54.2613 22.3893 54.336 22.592 54.336 22.784C54.336 22.8907 54.2827 23.0187 54.176 23.168C54.0907 23.3173 53.9627 23.392 53.792 23.392ZM44.768 25.088C44.2987 25.088 43.904 24.8853 43.584 24.48L43.2 24C42.752 23.616 42.464 23.2747 42.336 22.976C42.1867 22.7413 42.112 22.5067 42.112 22.272C42.112 21.4827 42.432 20.5333 43.072 19.424L44.512 16.832H45.024L46.048 18.688C46.3253 19.1573 46.5493 19.584 46.72 19.968C46.912 20.3307 47.0507 20.6293 47.136 20.864C47.2427 21.0987 47.3067 21.3227 47.328 21.536C47.3707 21.7493 47.392 21.952 47.392 22.144C47.392 22.4213 47.328 22.6773 47.2 22.912C47.0933 23.1467 46.9333 23.3813 46.72 23.616L45.984 24.448C45.5787 24.8747 45.1733 25.088 44.768 25.088Z"
              fill="#AD9D80"
            />
            <path
              d="M76.512 11.072L75.072 8.448C74.4533 7.33867 74.144 6.44267 74.144 5.76C74.144 5.20533 74.368 4.704 74.816 4.256L75.232 3.84L75.552 3.456C75.9147 3.02933 76.32 2.816 76.768 2.816C77.216 2.816 77.5787 2.98667 77.856 3.328C78.0053 3.49867 78.1653 3.68 78.336 3.872C78.5067 4.04267 78.6773 4.21333 78.848 4.384C79.2107 4.74667 79.392 5.20533 79.392 5.76C79.392 6.03733 79.3493 6.34667 79.264 6.688C79.1787 7.008 79.04 7.34933 78.848 7.712C78.464 8.416 77.856 9.536 77.024 11.072H76.512ZM79.872 11.456L79.296 10.816L84.352 5.376C84.864 4.8 85.3227 4.512 85.728 4.512C85.9627 4.512 86.1227 4.58667 86.208 4.736C86.2933 4.88533 86.336 5.03467 86.336 5.184C86.336 5.33333 86.24 5.54667 86.048 5.824C85.856 6.08 85.6853 6.272 85.536 6.4L79.872 11.456ZM73.664 11.456L68 6.4C67.7867 6.208 67.5947 5.99467 67.424 5.76C67.2747 5.52533 67.2 5.312 67.2 5.12C67.2 4.992 67.2533 4.864 67.36 4.736C67.4667 4.58667 67.616 4.512 67.808 4.512C67.9787 4.512 68.1813 4.58667 68.416 4.736C68.672 4.864 68.9387 5.07733 69.216 5.376L74.24 10.816L73.664 11.456ZM68.576 16.576C68.0213 16.576 67.5307 16.352 67.104 15.904L66.656 15.488L66.272 15.168C65.8453 14.8267 65.632 14.4213 65.632 13.952C65.632 13.504 65.8027 13.1413 66.144 12.864C66.3147 12.7147 66.496 12.5653 66.688 12.416C66.88 12.2453 67.0613 12.064 67.232 11.872C67.5733 11.5093 68.0213 11.328 68.576 11.328C69.1307 11.328 69.6747 11.456 70.208 11.712C70.7413 11.968 71.3493 12.288 72.032 12.672L73.888 13.696V14.208L71.296 15.648C70.1867 16.2667 69.28 16.576 68.576 16.576ZM84.96 16.576C84.6187 16.576 84.2133 16.4907 83.744 16.32C83.296 16.1493 82.8053 15.9253 82.272 15.648L79.648 14.208V13.696C80.7147 13.12 81.7067 12.5867 82.624 12.096C83.5413 11.584 84.32 11.328 84.96 11.328C85.5147 11.328 86.016 11.552 86.464 12L86.88 12.416L87.264 12.736C87.6907 13.0773 87.904 13.4827 87.904 13.952C87.904 14.4 87.7333 14.7627 87.392 15.04C87.2213 15.1893 87.04 15.3493 86.848 15.52C86.6773 15.6907 86.5067 15.8613 86.336 16.032C85.9733 16.3947 85.5147 16.576 84.96 16.576ZM76.768 16.512C76.0853 16.512 75.488 16.256 74.976 15.744C74.464 15.232 74.208 14.6347 74.208 13.952C74.208 13.2693 74.4533 12.672 74.944 12.16C75.456 11.648 76.064 11.392 76.768 11.392C77.4507 11.392 78.048 11.648 78.56 12.16C79.072 12.672 79.328 13.2693 79.328 13.952C79.328 14.6347 79.072 15.232 78.56 15.744C78.048 16.256 77.4507 16.512 76.768 16.512ZM67.808 23.392C67.616 23.392 67.4667 23.328 67.36 23.2C67.2533 23.0507 67.2 22.912 67.2 22.784C67.2 22.6133 67.2747 22.4107 67.424 22.176C67.5947 21.92 67.7867 21.696 68 21.504L73.664 16.448L74.24 17.088L69.216 22.528C68.9387 22.8267 68.672 23.0507 68.416 23.2C68.1813 23.328 67.9787 23.392 67.808 23.392ZM85.792 23.392C85.3227 23.392 84.832 23.104 84.32 22.528L79.296 17.088L79.872 16.448L85.536 21.504C85.7707 21.7173 85.9627 21.9413 86.112 22.176C86.2613 22.3893 86.336 22.592 86.336 22.784C86.336 22.8907 86.2827 23.0187 86.176 23.168C86.0907 23.3173 85.9627 23.392 85.792 23.392ZM76.768 25.088C76.2987 25.088 75.904 24.8853 75.584 24.48L75.2 24C74.752 23.616 74.464 23.2747 74.336 22.976C74.1867 22.7413 74.112 22.5067 74.112 22.272C74.112 21.4827 74.432 20.5333 75.072 19.424L76.512 16.832H77.024L78.048 18.688C78.3253 19.1573 78.5493 19.584 78.72 19.968C78.912 20.3307 79.0507 20.6293 79.136 20.864C79.2427 21.0987 79.3067 21.3227 79.328 21.536C79.3707 21.7493 79.392 21.952 79.392 22.144C79.392 22.4213 79.328 22.6773 79.2 22.912C79.0933 23.1467 78.9333 23.3813 78.72 23.616L77.984 24.448C77.5787 24.8747 77.1733 25.088 76.768 25.088Z"
              fill="#AD9D80"
            />
          </svg>
          <h1 className={styles.main_header__heading}>{detail.title}</h1>
          <div className={styles.main_header__desc}>
            <div>
              <p className={styles.subtitle}>
                “
                {detail.summary
                  ? detail.summary.replace(/<\/?b>/g, "").substring(0, 500) +
                    (detail.summary.length > 500 ? "..." : "")
                  : ""}
                ”
              </p>
            </div>
            <div className={styles.main_header__aside}>
              <div className={styles.containerHRC}>
                <div className={styles.titulos}>
                  <img
                    src={healthScore}
                    width="40px"
                    height="40px"
                    alt="not found"
                  />
                  <p>HealthScore:</p>
                  <br />
                  <p>" {detail.healthScore} " </p>
                </div>
                <div className={styles.titulos}>
                  <img src={clock} width="40px" height="40px" alt="not found" />
                  <p>readyInMinute: " {detail.readyInMinutes} " </p>
                </div>
                <div className={styles.titulos}>
                  <img src={world} width="40px" height="40px" alt="not found" />
                  <p>Cuisines: "{detail.cuisines}"</p>
                </div>
                <div className={styles.titulosD}>
                  <div className={styles.titulosDiets}>
                    <img
                      src={dietss}
                      width="40px"
                      height="40px"
                      alt="not found"
                    />
                    <p>Type Diets:</p>
                  </div>
                  {detail.diets ? (
                    <ul className={styles.ul}>
                      {diet.map((d) => (
                        <li className={styles.li}>
                          <img
                            src={tilde}
                            width="20px"
                            height="20px"
                            alt="not found"
                          />
                          {d}
                        </li>
                      ))}
                    </ul>
                  ) : (
                    <span>No diets</span>
                  )}
                </div>
              </div>
            </div>
          </div>
        </div>
        <div className={styles.directions}>
          <div className={styles.label}>Steps</div>
          <div className={styles.divider} />
          <p>
            {detail.analyzedInstructions ? (
              typeof detail.analyzedInstructions === "object" ? (
                <ul>
                  {detail.analyzedInstructions.map((d) => (
                    <li>{d}</li>
                  ))}
                </ul>
              ) : (
                <>
                  {detail.analyzedInstructions
                    ? detail.analyzedInstructions
                        .replace(/<\/?b>/g, "")
                        .substring(0, 500) +
                      (detail.analyzedInstructions.length > 500 ? "..." : "")
                    : ""}
                </>
              )
            ) : (
              <>No steps</>
            )}
          </p>
        </div>
        <div
          style={{ textAlign: "center", paddingTop: "4rem", color: "#383326" }}
        ></div>
      </div>
    </div>
  );
}
